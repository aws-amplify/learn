type SocialMediaLink {
  type: SocialMediaType
  url: AWSURL
}

enum SocialMediaType {
  INSTAGRAM
  LINKEDIN
  FACEBOOK
  GITHUB
  TWITTER
  TWITCH
  YOUTUBE
  DISCORDD
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

type CoursesPage @model @auth(rules: [{allow: public}]) {
  id: ID!
}

type AboutPage @model @auth(rules: [{allow: public}]) {
  id: ID!
}

type Contributor @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  title: String
  socialMediaLinks: [SocialMediaLink]
  Courses: [ContributorCourse] @connection(keyName: "byContributor", fields: ["id"])
}

type Chapter @model @auth(rules: [{allow: public}]) {
  id: ID!
  Title: String
  VideoLink: AWSURL
}

type Lesson @model @auth(rules: [{allow: public}]) {
  id: ID!
  Title: String
  Description: String
  Content: [String]
  VideoLink: AWSURL
}

type Course @model @auth(rules: [{allow: public}]) {
  id: ID!
  Title: String
  Subtitle: String
  SkillLevel: SkillLevel
  TimeHours: Int
  TimeMinutes: Int
  Bio: String
  Description: String
  Requirements: [String]
  Image: String
  contributors: [ContributorCourse] @connection(keyName: "byCourse", fields: ["id"])
}

type Footer @model @auth(rules: [{allow: public}]) {
  id: ID!
}

type Nav @model @auth(rules: [{allow: public}]) {
  id: ID!
}

type HomePage @model @auth(rules: [{allow: public}]) {
  id: ID!
}

type ContributorCourse @model(queries: null) @key(name: "byContributor", fields: ["contributorID", "courseID"]) @key(name: "byCourse", fields: ["courseID", "contributorID"]) @auth(rules: [{allow: public}, {allow: public}]) {
  id: ID!
  contributorID: ID!
  courseID: ID!
  contributor: Contributor! @connection(fields: ["contributorID"])
  course: Course! @connection(fields: ["courseID"])
}
 