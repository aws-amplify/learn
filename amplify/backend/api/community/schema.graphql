type Tag @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  name: String!
  courses: [Course] @manyToMany(relationName: "CourseTag")
}

type SocialMediaLink {
  platform: SocialMediaPlatform!
  url: AWSURL!
}

enum SocialMediaPlatform {
  INSTAGRAM
  LINKEDIN
  FACEBOOK
  GITHUB
  TWITTER
  TWITCH
  YOUTUBE
  DISCORD
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

type Contributor @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  jobTitle: String!
  socialNetwork: [SocialMediaLink]
  courses: [Course] @manyToMany(relationName: "ContributorCourse")
  bio: String!
  profilePic: String!
  username: String!
  lastName: String!
  firstName: String!
}

type Lesson @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  title: String!
  content: String!
  youtubeEmbedId: String
  chapter: Int!
  courseLesson: Course @hasOne
  lessonNumber: Int!
}

type Course @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  title: String!
  timeHours: Int!
  timeMinutes: Int!
  learningObjective: String!
  description: String!
  requirements: [String!]
  image: String
  contributors: [Contributor] @manyToMany(relationName: "ContributorCourse")
  courseTags: [Tag] @manyToMany(relationName: "CourseTag")
  skillLevel: SkillLevel!
  dateCreated: AWSDateTime!
  isFeatured: Boolean!
  imageAltText: String
  trailerEmbedId: String
}
 